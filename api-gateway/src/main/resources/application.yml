spring:
  application:
    name: api-gateway
  cloud:
    gateway:
#      globalcors:
#        add-to-simple-url-handler-mapping: true  # <- CRITICAL! Without add-to-simple-url-handler-mapping: true, Spring Cloud Gateway won?t actually use your CORS config
#        corsConfigurations:
#          '[/**]':
#            allowedOrigins: "*"
#            allowedMethods:
#              - GET
#              - POST
#              - PUT
#              - DELETE
#              - OPTIONS
#            allowedHeaders: "*"
      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true  # Converts service names to lowercase
      routes:
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/auth/**
        - id: trip-service
          uri: lb://trip-service
          predicates:
            - Path=/trips/**
        - id: booking-service
          uri: lb://booking-service
          predicates:
            - Path=/bookings/**
        - id: invoice-service
          uri: lb://invoice-service
          predicates:
            - Path=/invoices/**

        - id: stakeholder-service
          uri: lb://stakeholder-service
          predicates:
            - Path=/consignees/**, /brokers/**, /drivers/**
    loadbalancer:
      ribbon:
        enabled: false

server:
  port: 8080

eureka:
  instance:
    hostname: localhost
    prefer-ip-address: false  # or true if you want IP instead of hostname

  #    prefer-ip-address: true  # or true if you want IP instead of hostname, hostname not required


#   To force Eureka to use localhost or a custom name/IP:
#    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}


#    prefer-ip-address: true
#    ip-address: 127.0.0.1
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
